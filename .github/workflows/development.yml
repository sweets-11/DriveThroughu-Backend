name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # see: https://github.com/aws-actions/amazon-ecr-login
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 860030919883.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: zipcart
        IMAGE_TAG: development
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Log out of Amazon ECR
      if: always()
      run: docker logout 860030919883.dkr.ecr.us-east-1.amazonaws.com

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition api-service-2 \
        --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1.2.0
      with:
        task-definition: task-definition.json
        container-name: zipcart-staging
        image: 860030919883.dkr.ecr.us-east-1.amazonaws.com/zipcart:development

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: api-service-3
        cluster: zipcart-web-staging
        wait-for-service-stability: true